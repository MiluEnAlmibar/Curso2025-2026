# YARRRML mapping (opcional): equivalente a mappings/metro_mapping.rml
# Convierte CSV de TMB (líneas y estaciones_por_línea) a RDF según ontology.ttl
prefixes:
  xsd: "http://www.w3.org/2001/XMLSchema#"
  metro: "https://data.example.org/transport/bcn/metro/ontology#"
  ex: "https://data.example.org/transport/bcn/metro/"

mappings:

  lines:
    sources:
      - [linies_metro.csv~csv]
    s: ex:line/$(ID_LINIA)
    po:
      - [a, metro:MetroLine]
      - [metro:lineId, $(ID_LINIA), xsd:integer]
      - [metro:lineCode, $(CODI_LINIA), xsd:integer]
      - [metro:lineName, $(NOM_LINIA)]
      - [metro:lineDescription, $(DESC_LINIA)]
      - [metro:originStation, $(ORIGEN_LINIA)]
      - [metro:destinationStation, $(DESTI_LINIA)]
      - [metro:lineColor, $(COLOR_LINIA)]
      - [metro:textColor, $(COLOR_TEXT_LINIA)]
      - [metro:auxiliaryColor, $(COLOR_AUX_LINIA)]
      - [metro:hasGeometry, $(GEOMETRY)]

  stations:
    sources:
      - [estacions_linia.csv~csv]
    s: ex:station/$(ID_ESTACIO)
    po:
      - [a, metro:Station]
      - [metro:stationId, $(ID_ESTACIO), xsd:integer]
      - [metro:stationName, $(NOM_ESTACIO)]
      - [metro:hasGeometry, $(GEOMETRY)]

  line_has_station:
    sources:
      - [estacions_linia.csv~csv]
    s: ex:line/$(ID_LINIA)
    po:
      - p: metro:hasStation
        o: ex:station/$(ID_ESTACIO)

  station_has_line:
    sources:
      - [estacions_linia.csv~csv]
    s: ex:station/$(ID_ESTACIO)
    po:
      - p: metro:hasLine
        o: ex:line/$(ID_LINIA)

  stationline:
    sources:
      - [estacions_linia.csv~csv]
    s: ex:stationLine/$(ID_LINIA)-$(ID_ESTACIO)
    po:
      - [a, metro:StationLine]
      - [metro:stationOrder, $(ORDRE_ESTACIO), xsd:integer]
      - p: metro:hasStation
        o: ex:station/$(ID_ESTACIO)
      - p: metro:hasLine
        o: ex:line/$(ID_LINIA)
